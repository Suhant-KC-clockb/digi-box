// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Course {
  id               String         @id @default(auto()) @map("_id") @db.ObjectId
  title            String
  description      String?
  language         String
  category         CourseCategory @relation(fields: [courseCategoryId], references: [id])
  image            String
  previewUrl       String
  price            Float
  duration         String
  enrolled         Int            @default(0)
  curriculum       Curriculum[]
  slug             String?
  courseBenefit    String?
  status           Boolean        @default(false)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  courseCategoryId String         @db.ObjectId
}

model CourseCategory {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  title  String
  slug   String   @unique
  Course Course[]
}

model Curriculum {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  section   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Course    Course?  @relation(fields: [courseId], references: [id])
  courseId  String?  @db.ObjectId
  lesson    Lesson[]
}

model Lesson {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  videoUrl     String
  slug         String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  Curriculum   Curriculum? @relation(fields: [curriculumId], references: [id])
  curriculumId String?     @db.ObjectId
}

model LandingSection1 {
  id          String                @id @default(auto()) @map("_id") @db.ObjectId
  image       String?
  images      String[]
  redirectUrl String?
  type        Section1ContainerType
  count       String?
}

enum Section1ContainerType {
  Container1
  Container2
  Container3
  Course
  IndustryPartner
  JobPlacement
  YearsExperience
}
